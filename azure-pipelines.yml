name: llvm_clang_yml

trigger:
  branches:
    include:
    - master
  paths:
    exclude:
    - README.md

resources:
- repo: self

variables:
  BuidDir: 'build'
  InstallDir: 'install'

jobs:
- job: string
  pool:
    vmImage: 'VS2017-Win2016'

  timeoutInMinutes: 240

  steps:
    - checkout: self
      submodules: true

    - script: |
        call "C:\Program Files (x86)\Microsoft Visual Studio\2017\Enterprise\VC\Auxiliary\Build\vcvarsall.bat" x64
        set cc=cl
        set cxx=cl
        CMake -GNinja -H.\llvm -B.\$(BuidDir) -DCMAKE_INSTALL_PREFIX=$(InstallDir) -DLLVM_EXTERNAL_PROJECTS="clang" -DLLVM_EXTERNAL_CLANG_SOURCE_DIR=.\clang -DCMAKE_BUILD_TYPE=release -DLLVM_TARGETS_TO_BUILD=X86 -DLLVM_ENABLE_WARNINGS=OFF -DLLVM_ENABLE_CXX1Z=ON -DLLVM_INCLUDE_EXAMPLES=OFF -DLLVM_INCLUDE_TESTS=OFF -DLLVM_INCLUDE_DOCS=OFF
      displayName: CMake generation

    - script: |
        call "C:\Program Files (x86)\Microsoft Visual Studio\2017\Enterprise\VC\Auxiliary\Build\vcvarsall.bat" x64
        CMake --build .\$(BuidDir)
      displayName: CMake build-install
      timeoutInMinutes: 240
  
  steps:
    - task: jakobehn.jakobehn-vsts-github-tasks.publish-github-release.PublishGitHubRelease@0
      displayName: 'Publish GitHub Release llvm#####_clang######'
      inputs:
        applicationName: 'llvm_clang_buildDevOps'
        token: '$(llvmClangGithubToken)'
        repo: 'llvm_clang_build'
        owner: monamimani
        tagName: 'llvm#####_clang######'
        releaseName: 'llvm#####_clang######'
        releaseBody: 'llvm#####_clang######'
        draft: true
