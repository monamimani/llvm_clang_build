name: llvm_clang_yml

# https://docs.microsoft.com/en-us/azure/devops/pipelines/yaml-schema?view=vsts&tabs=schema

trigger:
  branches:
    include:
    - master
  paths:
    exclude:
    - README.md

resources:
- repo: self

variables:
  BuidDir: 'build'
  InstallDir: 'install'
  VerbosePreference: Continue

jobs:
- job: string
  pool:
    vmImage: 'VS2017-Win2016'

  timeoutInMinutes: 240

  steps:
    # - checkout: self # I think I don't need it because the get source of the ui take over when it is commented out.
    #   submodules: true

    # - script: |
    #     call "C:\Program Files (x86)\Microsoft Visual Studio\2017\Enterprise\VC\Auxiliary\Build\vcvarsall.bat" x64
    #     set cc=cl
    #     set cxx=cl
    #     CMake -GNinja -H.\llvm -B.\$(BuidDir) -DCMAKE_INSTALL_PREFIX=$(InstallDir) -DLLVM_EXTERNAL_PROJECTS="clang" -DLLVM_EXTERNAL_CLANG_SOURCE_DIR=.\clang -DCMAKE_BUILD_TYPE=release -DLLVM_TARGETS_TO_BUILD=X86 -DLLVM_ENABLE_WARNINGS=OFF -DLLVM_ENABLE_CXX1Z=ON -DLLVM_INCLUDE_EXAMPLES=OFF -DLLVM_INCLUDE_TESTS=OFF -DLLVM_INCLUDE_DOCS=OFF
    #   displayName: CMake generation

    # - script: |
    #     call "C:\Program Files (x86)\Microsoft Visual Studio\2017\Enterprise\VC\Auxiliary\Build\vcvarsall.bat" x64
    #     CMake --build .\$(BuidDir) --target install
    #   displayName: CMake build-install
    #   timeoutInMinutes: 240

    - script: |
        copy readme.md $(Build.stagingDirectory)\\readme.md

    - task: ArchiveFiles@2
      inputs:
        rootFolderOrFile: $(Build.stagingDirectory)\\readme.md
        archiveFile: $(Build.stagingDirectory)\\build.zip

    # - task: jakobehn.jakobehn-vsts-github-tasks.publish-github-release.PublishGitHubRelease@0
    #   displayName: 'Publish GitHub Release llvm_clang_v$(Build.BuildId)'
    #   inputs:
    #     applicationName: 'llvm_clang_buildDevOps'
    #     token: $(llvmClangGithubToken)
    #     repo: 'llvm_clang_build'
    #     owner: monamimani
    #     tagName: 'llvm_clang_v$(Build.BuildId)'
    #     releaseName: 'lllvm_clang_v$(Build.BuildId)'
    #     releaseBody: 'llvm_clang_v$(Build.BuildId)'
    #     assetsPattern: $(build.stagingDirectory)\\build.zip

    - task: marcelo-formentao.github-tools.github-release-publish-task.GitHubReleasePublish@0
      displayName: 'GitHub Release llvm_clang_v$(Build.BuildId)'
      inputs:
        githubEndpoint: monamimani
        githubRepository: 'monamimani/llvm_clang_build'
        githubTag: 'v$(Build.BuildNumber)_v$(Build.BuildId)'
        githubReleaseTitle: 'v$(Build.BuildNumber)_v$(Build.BuildId)'
        githubReleaseDraft: false
        githubReleaseAsset: '$(build.stagingDirectory)\\build.zip'
